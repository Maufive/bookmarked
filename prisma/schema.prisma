generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model Account {
  id                String   @id(map: "idx_29163_primary") @default(cuid()) @db.VarChar(191)
  userId            String   @db.VarChar(191)
  type              String   @db.VarChar(191)
  provider          String   @db.VarChar(191)
  providerAccountId String   @db.VarChar(191)
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?  @db.VarChar(191)
  scope             String?  @db.VarChar(191)
  id_token          String?
  session_state     String?  @db.VarChar(191)
  createdAt         DateTime @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime @default(now()) @db.Timestamptz(6)
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("account")
}

model Bookmark {
  id          Int      @id(map: "idx_29171_primary") @unique(map: "idx_29171_bookmarks_id_key") @default(autoincrement())
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  name        String?  @db.VarChar(255)
  url         String   @unique(map: "idx_29171_bookmarks_url_key") @db.VarChar(255)
  groupId     Int?
  hostname    String
  description String?
  siteName    String?
  image       String?
  icon        String?
  keywords    String?
  group       Group?   @relation(fields: [groupId], references: [id])

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.VarChar(191)

  @@index([groupId, url])
  @@index([userId])
  @@map("bookmark")
}

model Group {
  id        Int        @id(map: "idx_29179_primary") @default(autoincrement())
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime   @updatedAt @db.Timestamptz(6)
  name      String     @db.VarChar(255)
  bookmarks Bookmark[]
  color     String     @db.VarChar(191)

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.VarChar(191)

  @@index([userId])
  @@map("group")
}

model Session {
  id           String   @id(map: "idx_29186_primary") @default(cuid()) @db.VarChar(191)
  sessionToken String   @unique(map: "idx_29186_sessions_sessiontoken_key") @db.VarChar(191)
  userId       String   @db.VarChar(191)
  expires      DateTime @db.Timestamptz(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("session")
}

model User {
  id            String     @id(map: "idx_29191_primary") @default(cuid()) @db.VarChar(191)
  name          String?    @db.VarChar(191)
  email         String?    @unique(map: "idx_29191_users_email_key") @db.VarChar(191)
  emailVerified DateTime?  @db.Timestamptz(6)
  image         String?    @db.VarChar(191)
  createdAt     DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime   @default(now()) @db.Timestamptz(6)
  accounts      Account[]
  sessions      Session[]
  bookmarks     Bookmark[]
  groups        Group[]

  @@map("user")
}

model VerificationToken {
  identifier String   @db.VarChar(191)
  token      String   @unique @db.VarChar(191)
  expires    DateTime @db.Timestamptz(6)

  @@unique([identifier, token])
  @@map("verification_token")
}
